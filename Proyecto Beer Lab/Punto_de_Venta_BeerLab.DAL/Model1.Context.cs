//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Punto_de_Venta_BeerLab.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ProyectoFinalBeerLabEntities : DbContext
    {
        public ProyectoFinalBeerLabEntities()
            : base("name=ProyectoFinalBeerLabEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<TBL_BeerLab> TBL_BeerLab { get; set; }
        public virtual DbSet<TBL_Cantones> TBL_Cantones { get; set; }
        public virtual DbSet<TBL_CierreCajas> TBL_CierreCajas { get; set; }
        public virtual DbSet<TBL_Clientes> TBL_Clientes { get; set; }
        public virtual DbSet<TBL_Cuentas_por_pagar> TBL_Cuentas_por_pagar { get; set; }
        public virtual DbSet<TBL_CuentasCobrar> TBL_CuentasCobrar { get; set; }
        public virtual DbSet<TBL_DescuentosEstandar> TBL_DescuentosEstandar { get; set; }
        public virtual DbSet<TBL_DescuentosVIP> TBL_DescuentosVIP { get; set; }
        public virtual DbSet<TBL_Detalle_Factura> TBL_Detalle_Factura { get; set; }
        public virtual DbSet<TBL_Detalle_Merma> TBL_Detalle_Merma { get; set; }
        public virtual DbSet<TBL_Detalle_Orden_Fabricacion> TBL_Detalle_Orden_Fabricacion { get; set; }
        public virtual DbSet<TBL_Direcciones_cliente> TBL_Direcciones_cliente { get; set; }
        public virtual DbSet<TBL_Distritos> TBL_Distritos { get; set; }
        public virtual DbSet<TBL_Estado> TBL_Estado { get; set; }
        public virtual DbSet<TBL_Factura> TBL_Factura { get; set; }
        public virtual DbSet<TBL_Merma> TBL_Merma { get; set; }
        public virtual DbSet<TBL_Modulos> TBL_Modulos { get; set; }
        public virtual DbSet<TBL_Operaciones> TBL_Operaciones { get; set; }
        public virtual DbSet<TBL_Orden_Fabricacion> TBL_Orden_Fabricacion { get; set; }
        public virtual DbSet<TBL_Perfil_Operacion> TBL_Perfil_Operacion { get; set; }
        public virtual DbSet<TBL_Productos> TBL_Productos { get; set; }
        public virtual DbSet<TBL_Provincias> TBL_Provincias { get; set; }
        public virtual DbSet<TBL_Reciclaje> TBL_Reciclaje { get; set; }
        public virtual DbSet<TBL_Roles> TBL_Roles { get; set; }
        public virtual DbSet<TBL_RprtCierreCajas> TBL_RprtCierreCajas { get; set; }
        public virtual DbSet<TBL_RprtCuentasxCobrar> TBL_RprtCuentasxCobrar { get; set; }
        public virtual DbSet<TBL_Tiempos_Usuario> TBL_Tiempos_Usuario { get; set; }
        public virtual DbSet<TBL_Tipo_Reciclaje> TBL_Tipo_Reciclaje { get; set; }
        public virtual DbSet<TBL_Ubicaciones> TBL_Ubicaciones { get; set; }
        public virtual DbSet<TBL_Usuarios> TBL_Usuarios { get; set; }
        public virtual DbSet<TBL_Devoluciones> TBL_Devoluciones { get; set; }
    
        public virtual int Sp_CierreDevoluciones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_CierreDevoluciones");
        }
    
        public virtual int Sp_CierreFacturas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_CierreFacturas");
        }
    
        public virtual int Sp_CierreMerma()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_CierreMerma");
        }
    
        public virtual int Sp_CierreReciclaje()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_CierreReciclaje");
        }
    
        public virtual ObjectResult<sp_Consulta_Factura_Detalle_Result> sp_Consulta_Factura_Detalle(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Consulta_Factura_Detalle_Result>("sp_Consulta_Factura_Detalle", idParameter);
        }
    
        public virtual ObjectResult<Sp_Filtrar_CierreCajas_Result> Sp_Filtrar_CierreCajas(Nullable<int> id_CierreCajas)
        {
            var id_CierreCajasParameter = id_CierreCajas.HasValue ?
                new ObjectParameter("Id_CierreCajas", id_CierreCajas) :
                new ObjectParameter("Id_CierreCajas", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Filtrar_CierreCajas_Result>("Sp_Filtrar_CierreCajas", id_CierreCajasParameter);
        }
    
        public virtual ObjectResult<Sp_Filtrar_CuentasCobrar_Result> Sp_Filtrar_CuentasCobrar(Nullable<int> id_CuentasCobrar)
        {
            var id_CuentasCobrarParameter = id_CuentasCobrar.HasValue ?
                new ObjectParameter("Id_CuentasCobrar", id_CuentasCobrar) :
                new ObjectParameter("Id_CuentasCobrar", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Filtrar_CuentasCobrar_Result>("Sp_Filtrar_CuentasCobrar", id_CuentasCobrarParameter);
        }
    
        public virtual ObjectResult<Sp_Filtrar_Pagar_Result> Sp_Filtrar_Pagar(Nullable<int> id_CuentasPagar)
        {
            var id_CuentasPagarParameter = id_CuentasPagar.HasValue ?
                new ObjectParameter("Id_CuentasPagar", id_CuentasPagar) :
                new ObjectParameter("Id_CuentasPagar", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Filtrar_Pagar_Result>("Sp_Filtrar_Pagar", id_CuentasPagarParameter);
        }
    
        public virtual ObjectResult<sp_Iniciar_Session_Result> sp_Iniciar_Session(string identificacion, string contraseña)
        {
            var identificacionParameter = identificacion != null ?
                new ObjectParameter("identificacion", identificacion) :
                new ObjectParameter("identificacion", typeof(string));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("contraseña", contraseña) :
                new ObjectParameter("contraseña", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Iniciar_Session_Result>("sp_Iniciar_Session", identificacionParameter, contraseñaParameter);
        }
    
        public virtual int Sp_Insertar_CierreCajas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Insertar_CierreCajas");
        }
    
        public virtual int sp_Insertar_Clientes(string tipoId, string identificacion, string nombre, string apellido1, string apellido2, Nullable<System.DateTime> fecha_nacimiento, Nullable<System.DateTime> fecha_creacion, string correo, Nullable<int> telefono)
        {
            var tipoIdParameter = tipoId != null ?
                new ObjectParameter("TipoId", tipoId) :
                new ObjectParameter("TipoId", typeof(string));
    
            var identificacionParameter = identificacion != null ?
                new ObjectParameter("Identificacion", identificacion) :
                new ObjectParameter("Identificacion", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellido1Parameter = apellido1 != null ?
                new ObjectParameter("Apellido1", apellido1) :
                new ObjectParameter("Apellido1", typeof(string));
    
            var apellido2Parameter = apellido2 != null ?
                new ObjectParameter("Apellido2", apellido2) :
                new ObjectParameter("Apellido2", typeof(string));
    
            var fecha_nacimientoParameter = fecha_nacimiento.HasValue ?
                new ObjectParameter("Fecha_nacimiento", fecha_nacimiento) :
                new ObjectParameter("Fecha_nacimiento", typeof(System.DateTime));
    
            var fecha_creacionParameter = fecha_creacion.HasValue ?
                new ObjectParameter("Fecha_creacion", fecha_creacion) :
                new ObjectParameter("Fecha_creacion", typeof(System.DateTime));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var telefonoParameter = telefono.HasValue ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Insertar_Clientes", tipoIdParameter, identificacionParameter, nombreParameter, apellido1Parameter, apellido2Parameter, fecha_nacimientoParameter, fecha_creacionParameter, correoParameter, telefonoParameter);
        }
    
        public virtual int Sp_Insertar_CuentaCobrar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Insertar_CuentaCobrar");
        }
    
        public virtual int sp_Insertar_Descuentos_Estandar(Nullable<System.DateTime> fecha_creacion, Nullable<int> cantidad_Minima, Nullable<int> cantidad_Maxima, Nullable<int> descuento, string dia, Nullable<int> estado)
        {
            var fecha_creacionParameter = fecha_creacion.HasValue ?
                new ObjectParameter("Fecha_creacion", fecha_creacion) :
                new ObjectParameter("Fecha_creacion", typeof(System.DateTime));
    
            var cantidad_MinimaParameter = cantidad_Minima.HasValue ?
                new ObjectParameter("Cantidad_Minima", cantidad_Minima) :
                new ObjectParameter("Cantidad_Minima", typeof(int));
    
            var cantidad_MaximaParameter = cantidad_Maxima.HasValue ?
                new ObjectParameter("Cantidad_Maxima", cantidad_Maxima) :
                new ObjectParameter("Cantidad_Maxima", typeof(int));
    
            var descuentoParameter = descuento.HasValue ?
                new ObjectParameter("Descuento", descuento) :
                new ObjectParameter("Descuento", typeof(int));
    
            var diaParameter = dia != null ?
                new ObjectParameter("Dia", dia) :
                new ObjectParameter("Dia", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Insertar_Descuentos_Estandar", fecha_creacionParameter, cantidad_MinimaParameter, cantidad_MaximaParameter, descuentoParameter, diaParameter, estadoParameter);
        }
    
        public virtual int sp_Insertar_DescuentosVIP(Nullable<System.DateTime> fecha_creacion, Nullable<int> descuento, Nullable<int> puntos, Nullable<int> estado)
        {
            var fecha_creacionParameter = fecha_creacion.HasValue ?
                new ObjectParameter("Fecha_creacion", fecha_creacion) :
                new ObjectParameter("Fecha_creacion", typeof(System.DateTime));
    
            var descuentoParameter = descuento.HasValue ?
                new ObjectParameter("Descuento", descuento) :
                new ObjectParameter("Descuento", typeof(int));
    
            var puntosParameter = puntos.HasValue ?
                new ObjectParameter("Puntos", puntos) :
                new ObjectParameter("Puntos", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Insertar_DescuentosVIP", fecha_creacionParameter, descuentoParameter, puntosParameter, estadoParameter);
        }
    
        public virtual int sp_Insertar_Productos(string codigo, string nombre_producto, string tipo_envasado, string nivel_fragilidad, Nullable<int> cantidad_mililitros, Nullable<int> nivel_Alcohol, Nullable<decimal> precio_producto, Nullable<System.DateTime> fecha_emision, Nullable<System.DateTime> fecha_caducidad, Nullable<int> stock_Inicial, Nullable<int> stock_Actual, Nullable<System.DateTime> fecha_ingreso, Nullable<int> id_estado, string descripcion_producto)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombre_productoParameter = nombre_producto != null ?
                new ObjectParameter("Nombre_producto", nombre_producto) :
                new ObjectParameter("Nombre_producto", typeof(string));
    
            var tipo_envasadoParameter = tipo_envasado != null ?
                new ObjectParameter("Tipo_envasado", tipo_envasado) :
                new ObjectParameter("Tipo_envasado", typeof(string));
    
            var nivel_fragilidadParameter = nivel_fragilidad != null ?
                new ObjectParameter("Nivel_fragilidad", nivel_fragilidad) :
                new ObjectParameter("Nivel_fragilidad", typeof(string));
    
            var cantidad_mililitrosParameter = cantidad_mililitros.HasValue ?
                new ObjectParameter("Cantidad_mililitros", cantidad_mililitros) :
                new ObjectParameter("Cantidad_mililitros", typeof(int));
    
            var nivel_AlcoholParameter = nivel_Alcohol.HasValue ?
                new ObjectParameter("Nivel_Alcohol", nivel_Alcohol) :
                new ObjectParameter("Nivel_Alcohol", typeof(int));
    
            var precio_productoParameter = precio_producto.HasValue ?
                new ObjectParameter("Precio_producto", precio_producto) :
                new ObjectParameter("Precio_producto", typeof(decimal));
    
            var fecha_emisionParameter = fecha_emision.HasValue ?
                new ObjectParameter("Fecha_emision", fecha_emision) :
                new ObjectParameter("Fecha_emision", typeof(System.DateTime));
    
            var fecha_caducidadParameter = fecha_caducidad.HasValue ?
                new ObjectParameter("Fecha_caducidad", fecha_caducidad) :
                new ObjectParameter("Fecha_caducidad", typeof(System.DateTime));
    
            var stock_InicialParameter = stock_Inicial.HasValue ?
                new ObjectParameter("Stock_Inicial", stock_Inicial) :
                new ObjectParameter("Stock_Inicial", typeof(int));
    
            var stock_ActualParameter = stock_Actual.HasValue ?
                new ObjectParameter("Stock_Actual", stock_Actual) :
                new ObjectParameter("Stock_Actual", typeof(int));
    
            var fecha_ingresoParameter = fecha_ingreso.HasValue ?
                new ObjectParameter("Fecha_ingreso", fecha_ingreso) :
                new ObjectParameter("Fecha_ingreso", typeof(System.DateTime));
    
            var id_estadoParameter = id_estado.HasValue ?
                new ObjectParameter("Id_estado", id_estado) :
                new ObjectParameter("Id_estado", typeof(int));
    
            var descripcion_productoParameter = descripcion_producto != null ?
                new ObjectParameter("Descripcion_producto", descripcion_producto) :
                new ObjectParameter("Descripcion_producto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Insertar_Productos", codigoParameter, nombre_productoParameter, tipo_envasadoParameter, nivel_fragilidadParameter, cantidad_mililitrosParameter, nivel_AlcoholParameter, precio_productoParameter, fecha_emisionParameter, fecha_caducidadParameter, stock_InicialParameter, stock_ActualParameter, fecha_ingresoParameter, id_estadoParameter, descripcion_productoParameter);
        }
    
        public virtual int Sp_Insertar_ReporteCierreCajas(Nullable<System.DateTime> fecha_cierre, Nullable<decimal> total_Ventas_Contado, Nullable<decimal> total_Ventas_Credito, Nullable<decimal> total_Devoluciones, Nullable<decimal> total_Efectivo, Nullable<decimal> total_Tarjeta, Nullable<decimal> total_Merma, Nullable<decimal> total_General, Nullable<int> id_factura)
        {
            var fecha_cierreParameter = fecha_cierre.HasValue ?
                new ObjectParameter("Fecha_cierre", fecha_cierre) :
                new ObjectParameter("Fecha_cierre", typeof(System.DateTime));
    
            var total_Ventas_ContadoParameter = total_Ventas_Contado.HasValue ?
                new ObjectParameter("Total_Ventas_Contado", total_Ventas_Contado) :
                new ObjectParameter("Total_Ventas_Contado", typeof(decimal));
    
            var total_Ventas_CreditoParameter = total_Ventas_Credito.HasValue ?
                new ObjectParameter("Total_Ventas_Credito", total_Ventas_Credito) :
                new ObjectParameter("Total_Ventas_Credito", typeof(decimal));
    
            var total_DevolucionesParameter = total_Devoluciones.HasValue ?
                new ObjectParameter("Total_Devoluciones", total_Devoluciones) :
                new ObjectParameter("Total_Devoluciones", typeof(decimal));
    
            var total_EfectivoParameter = total_Efectivo.HasValue ?
                new ObjectParameter("Total_Efectivo", total_Efectivo) :
                new ObjectParameter("Total_Efectivo", typeof(decimal));
    
            var total_TarjetaParameter = total_Tarjeta.HasValue ?
                new ObjectParameter("Total_Tarjeta", total_Tarjeta) :
                new ObjectParameter("Total_Tarjeta", typeof(decimal));
    
            var total_MermaParameter = total_Merma.HasValue ?
                new ObjectParameter("Total_Merma", total_Merma) :
                new ObjectParameter("Total_Merma", typeof(decimal));
    
            var total_GeneralParameter = total_General.HasValue ?
                new ObjectParameter("Total_General", total_General) :
                new ObjectParameter("Total_General", typeof(decimal));
    
            var id_facturaParameter = id_factura.HasValue ?
                new ObjectParameter("Id_factura", id_factura) :
                new ObjectParameter("Id_factura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Insertar_ReporteCierreCajas", fecha_cierreParameter, total_Ventas_ContadoParameter, total_Ventas_CreditoParameter, total_DevolucionesParameter, total_EfectivoParameter, total_TarjetaParameter, total_MermaParameter, total_GeneralParameter, id_facturaParameter);
        }
    
        public virtual int sp_Insertar_Usuarios(string identificacion, string nombre, string apellido1, string apellido2, string correo, Nullable<System.DateTime> fecha_creacion, Nullable<int> id_estado)
        {
            var identificacionParameter = identificacion != null ?
                new ObjectParameter("Identificacion", identificacion) :
                new ObjectParameter("Identificacion", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellido1Parameter = apellido1 != null ?
                new ObjectParameter("Apellido1", apellido1) :
                new ObjectParameter("Apellido1", typeof(string));
    
            var apellido2Parameter = apellido2 != null ?
                new ObjectParameter("Apellido2", apellido2) :
                new ObjectParameter("Apellido2", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var fecha_creacionParameter = fecha_creacion.HasValue ?
                new ObjectParameter("Fecha_creacion", fecha_creacion) :
                new ObjectParameter("Fecha_creacion", typeof(System.DateTime));
    
            var id_estadoParameter = id_estado.HasValue ?
                new ObjectParameter("Id_estado", id_estado) :
                new ObjectParameter("Id_estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Insertar_Usuarios", identificacionParameter, nombreParameter, apellido1Parameter, apellido2Parameter, correoParameter, fecha_creacionParameter, id_estadoParameter);
        }
    
        public virtual ObjectResult<Sp_Listar_CierreCajas_Result> Sp_Listar_CierreCajas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Listar_CierreCajas_Result>("Sp_Listar_CierreCajas");
        }
    
        public virtual ObjectResult<Sp_Listar_CuentasCobrar_Result> Sp_Listar_CuentasCobrar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Listar_CuentasCobrar_Result>("Sp_Listar_CuentasCobrar");
        }
    
        public virtual ObjectResult<Sp_Listar_CuentasPagar_Result> Sp_Listar_CuentasPagar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Listar_CuentasPagar_Result>("Sp_Listar_CuentasPagar");
        }
    
        public virtual ObjectResult<Sp_Listar_ReporteCierreCajas_Result> Sp_Listar_ReporteCierreCajas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Listar_ReporteCierreCajas_Result>("Sp_Listar_ReporteCierreCajas");
        }
    
        public virtual ObjectResult<Sp_Listar_ReporteCuentasXCobrar_Result> Sp_Listar_ReporteCuentasXCobrar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Listar_ReporteCuentasXCobrar_Result>("Sp_Listar_ReporteCuentasXCobrar");
        }
    
        public virtual int sp_Modificar_Clientes(string tipoId, string identificacion, string nombre, string apellido1, string apellido2, Nullable<System.DateTime> fecha_nacimiento, Nullable<System.DateTime> fecha_modificacion, string correo, Nullable<int> telefono)
        {
            var tipoIdParameter = tipoId != null ?
                new ObjectParameter("TipoId", tipoId) :
                new ObjectParameter("TipoId", typeof(string));
    
            var identificacionParameter = identificacion != null ?
                new ObjectParameter("Identificacion", identificacion) :
                new ObjectParameter("Identificacion", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellido1Parameter = apellido1 != null ?
                new ObjectParameter("Apellido1", apellido1) :
                new ObjectParameter("Apellido1", typeof(string));
    
            var apellido2Parameter = apellido2 != null ?
                new ObjectParameter("Apellido2", apellido2) :
                new ObjectParameter("Apellido2", typeof(string));
    
            var fecha_nacimientoParameter = fecha_nacimiento.HasValue ?
                new ObjectParameter("Fecha_nacimiento", fecha_nacimiento) :
                new ObjectParameter("Fecha_nacimiento", typeof(System.DateTime));
    
            var fecha_modificacionParameter = fecha_modificacion.HasValue ?
                new ObjectParameter("Fecha_modificacion", fecha_modificacion) :
                new ObjectParameter("Fecha_modificacion", typeof(System.DateTime));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var telefonoParameter = telefono.HasValue ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Modificar_Clientes", tipoIdParameter, identificacionParameter, nombreParameter, apellido1Parameter, apellido2Parameter, fecha_nacimientoParameter, fecha_modificacionParameter, correoParameter, telefonoParameter);
        }
    
        public virtual int sp_Modificar_Descuentos_Estandar(Nullable<int> id_DescEstandar, Nullable<System.DateTime> fecha_modificacion, Nullable<int> cantidad_Minima, Nullable<int> cantidad_Maxima, Nullable<int> descuento, string dia, Nullable<int> estado)
        {
            var id_DescEstandarParameter = id_DescEstandar.HasValue ?
                new ObjectParameter("Id_DescEstandar", id_DescEstandar) :
                new ObjectParameter("Id_DescEstandar", typeof(int));
    
            var fecha_modificacionParameter = fecha_modificacion.HasValue ?
                new ObjectParameter("Fecha_modificacion", fecha_modificacion) :
                new ObjectParameter("Fecha_modificacion", typeof(System.DateTime));
    
            var cantidad_MinimaParameter = cantidad_Minima.HasValue ?
                new ObjectParameter("Cantidad_Minima", cantidad_Minima) :
                new ObjectParameter("Cantidad_Minima", typeof(int));
    
            var cantidad_MaximaParameter = cantidad_Maxima.HasValue ?
                new ObjectParameter("Cantidad_Maxima", cantidad_Maxima) :
                new ObjectParameter("Cantidad_Maxima", typeof(int));
    
            var descuentoParameter = descuento.HasValue ?
                new ObjectParameter("Descuento", descuento) :
                new ObjectParameter("Descuento", typeof(int));
    
            var diaParameter = dia != null ?
                new ObjectParameter("Dia", dia) :
                new ObjectParameter("Dia", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Modificar_Descuentos_Estandar", id_DescEstandarParameter, fecha_modificacionParameter, cantidad_MinimaParameter, cantidad_MaximaParameter, descuentoParameter, diaParameter, estadoParameter);
        }
    
        public virtual int sp_Modificar_DescuentosVIP(Nullable<int> id_DescVIP, Nullable<System.DateTime> fecha_modificacion, Nullable<int> descuento, Nullable<int> puntos, Nullable<int> estado)
        {
            var id_DescVIPParameter = id_DescVIP.HasValue ?
                new ObjectParameter("Id_DescVIP", id_DescVIP) :
                new ObjectParameter("Id_DescVIP", typeof(int));
    
            var fecha_modificacionParameter = fecha_modificacion.HasValue ?
                new ObjectParameter("Fecha_modificacion", fecha_modificacion) :
                new ObjectParameter("Fecha_modificacion", typeof(System.DateTime));
    
            var descuentoParameter = descuento.HasValue ?
                new ObjectParameter("Descuento", descuento) :
                new ObjectParameter("Descuento", typeof(int));
    
            var puntosParameter = puntos.HasValue ?
                new ObjectParameter("Puntos", puntos) :
                new ObjectParameter("Puntos", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Modificar_DescuentosVIP", id_DescVIPParameter, fecha_modificacionParameter, descuentoParameter, puntosParameter, estadoParameter);
        }
    
        public virtual int sp_Modificar_Productos(string codigo, string nombre_producto, string tipo_envasado, string nivel_fragilidad, Nullable<int> cantidad_mililitros, Nullable<int> nivel_Alcohol, Nullable<decimal> precio_producto, Nullable<System.DateTime> fecha_emision, Nullable<System.DateTime> fecha_caducidad, Nullable<int> stock_Inicial, Nullable<int> stock_Actual, string descripcion_producto, Nullable<System.DateTime> fecha_Modificacion)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombre_productoParameter = nombre_producto != null ?
                new ObjectParameter("Nombre_producto", nombre_producto) :
                new ObjectParameter("Nombre_producto", typeof(string));
    
            var tipo_envasadoParameter = tipo_envasado != null ?
                new ObjectParameter("Tipo_envasado", tipo_envasado) :
                new ObjectParameter("Tipo_envasado", typeof(string));
    
            var nivel_fragilidadParameter = nivel_fragilidad != null ?
                new ObjectParameter("Nivel_fragilidad", nivel_fragilidad) :
                new ObjectParameter("Nivel_fragilidad", typeof(string));
    
            var cantidad_mililitrosParameter = cantidad_mililitros.HasValue ?
                new ObjectParameter("Cantidad_mililitros", cantidad_mililitros) :
                new ObjectParameter("Cantidad_mililitros", typeof(int));
    
            var nivel_AlcoholParameter = nivel_Alcohol.HasValue ?
                new ObjectParameter("Nivel_Alcohol", nivel_Alcohol) :
                new ObjectParameter("Nivel_Alcohol", typeof(int));
    
            var precio_productoParameter = precio_producto.HasValue ?
                new ObjectParameter("Precio_producto", precio_producto) :
                new ObjectParameter("Precio_producto", typeof(decimal));
    
            var fecha_emisionParameter = fecha_emision.HasValue ?
                new ObjectParameter("Fecha_emision", fecha_emision) :
                new ObjectParameter("Fecha_emision", typeof(System.DateTime));
    
            var fecha_caducidadParameter = fecha_caducidad.HasValue ?
                new ObjectParameter("Fecha_caducidad", fecha_caducidad) :
                new ObjectParameter("Fecha_caducidad", typeof(System.DateTime));
    
            var stock_InicialParameter = stock_Inicial.HasValue ?
                new ObjectParameter("Stock_Inicial", stock_Inicial) :
                new ObjectParameter("Stock_Inicial", typeof(int));
    
            var stock_ActualParameter = stock_Actual.HasValue ?
                new ObjectParameter("Stock_Actual", stock_Actual) :
                new ObjectParameter("Stock_Actual", typeof(int));
    
            var descripcion_productoParameter = descripcion_producto != null ?
                new ObjectParameter("Descripcion_producto", descripcion_producto) :
                new ObjectParameter("Descripcion_producto", typeof(string));
    
            var fecha_ModificacionParameter = fecha_Modificacion.HasValue ?
                new ObjectParameter("Fecha_Modificacion", fecha_Modificacion) :
                new ObjectParameter("Fecha_Modificacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Modificar_Productos", codigoParameter, nombre_productoParameter, tipo_envasadoParameter, nivel_fragilidadParameter, cantidad_mililitrosParameter, nivel_AlcoholParameter, precio_productoParameter, fecha_emisionParameter, fecha_caducidadParameter, stock_InicialParameter, stock_ActualParameter, descripcion_productoParameter, fecha_ModificacionParameter);
        }
    
        public virtual int sp_Modificar_Usuarios(string identificacion, string nombre, string apellido1, string apellido2, string correo, Nullable<System.DateTime> fecha_modificacion)
        {
            var identificacionParameter = identificacion != null ?
                new ObjectParameter("Identificacion", identificacion) :
                new ObjectParameter("Identificacion", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellido1Parameter = apellido1 != null ?
                new ObjectParameter("Apellido1", apellido1) :
                new ObjectParameter("Apellido1", typeof(string));
    
            var apellido2Parameter = apellido2 != null ?
                new ObjectParameter("Apellido2", apellido2) :
                new ObjectParameter("Apellido2", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var fecha_modificacionParameter = fecha_modificacion.HasValue ?
                new ObjectParameter("Fecha_modificacion", fecha_modificacion) :
                new ObjectParameter("Fecha_modificacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Modificar_Usuarios", identificacionParameter, nombreParameter, apellido1Parameter, apellido2Parameter, correoParameter, fecha_modificacionParameter);
        }
    
        public virtual ObjectResult<sp_Mostrar_Clientes_Result> sp_Mostrar_Clientes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Mostrar_Clientes_Result>("sp_Mostrar_Clientes");
        }
    
        public virtual ObjectResult<sp_Mostrar_Descuentos_Estandar_Result> sp_Mostrar_Descuentos_Estandar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Mostrar_Descuentos_Estandar_Result>("sp_Mostrar_Descuentos_Estandar");
        }
    
        public virtual ObjectResult<sp_Mostrar_DescuentosVIP_Result> sp_Mostrar_DescuentosVIP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Mostrar_DescuentosVIP_Result>("sp_Mostrar_DescuentosVIP");
        }
    
        public virtual ObjectResult<sp_Mostrar_Productos_Result> sp_Mostrar_Productos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Mostrar_Productos_Result>("sp_Mostrar_Productos");
        }
    
        public virtual ObjectResult<sp_Mostrar_Usuarios_Result> sp_Mostrar_Usuarios()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Mostrar_Usuarios_Result>("sp_Mostrar_Usuarios");
        }
    
        public virtual ObjectResult<sp_Tipo_Usuario_Result> sp_Tipo_Usuario(string identificacion)
        {
            var identificacionParameter = identificacion != null ?
                new ObjectParameter("identificacion", identificacion) :
                new ObjectParameter("identificacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Tipo_Usuario_Result>("sp_Tipo_Usuario", identificacionParameter);
        }
    
        public virtual int sp_Insertar_Orden_Fabricacion(Nullable<int> id_Factura, Nullable<System.DateTime> fecha_Emision, Nullable<System.DateTime> fecha_Fabricacion, Nullable<int> estado)
        {
            var id_FacturaParameter = id_Factura.HasValue ?
                new ObjectParameter("Id_Factura", id_Factura) :
                new ObjectParameter("Id_Factura", typeof(int));
    
            var fecha_EmisionParameter = fecha_Emision.HasValue ?
                new ObjectParameter("Fecha_Emision", fecha_Emision) :
                new ObjectParameter("Fecha_Emision", typeof(System.DateTime));
    
            var fecha_FabricacionParameter = fecha_Fabricacion.HasValue ?
                new ObjectParameter("Fecha_Fabricacion", fecha_Fabricacion) :
                new ObjectParameter("Fecha_Fabricacion", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Insertar_Orden_Fabricacion", id_FacturaParameter, fecha_EmisionParameter, fecha_FabricacionParameter, estadoParameter);
        }
    
        public virtual int sp_Modificar_Ordenes_Fabricacion(Nullable<int> id_Orden, Nullable<int> id_Factura, Nullable<System.DateTime> fecha_Emision, Nullable<System.DateTime> fecha_Fabricacion, Nullable<int> estado)
        {
            var id_OrdenParameter = id_Orden.HasValue ?
                new ObjectParameter("Id_Orden", id_Orden) :
                new ObjectParameter("Id_Orden", typeof(int));
    
            var id_FacturaParameter = id_Factura.HasValue ?
                new ObjectParameter("Id_Factura", id_Factura) :
                new ObjectParameter("Id_Factura", typeof(int));
    
            var fecha_EmisionParameter = fecha_Emision.HasValue ?
                new ObjectParameter("Fecha_Emision", fecha_Emision) :
                new ObjectParameter("Fecha_Emision", typeof(System.DateTime));
    
            var fecha_FabricacionParameter = fecha_Fabricacion.HasValue ?
                new ObjectParameter("Fecha_Fabricacion", fecha_Fabricacion) :
                new ObjectParameter("Fecha_Fabricacion", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Modificar_Ordenes_Fabricacion", id_OrdenParameter, id_FacturaParameter, fecha_EmisionParameter, fecha_FabricacionParameter, estadoParameter);
        }
    
        public virtual ObjectResult<sp_Mostrar_Ordenes_Fabricacion_Result> sp_Mostrar_Ordenes_Fabricacion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Mostrar_Ordenes_Fabricacion_Result>("sp_Mostrar_Ordenes_Fabricacion");
        }
    
        public virtual int SP_Modificar_Detalle_Factura(Nullable<int> iD_Factura)
        {
            var iD_FacturaParameter = iD_Factura.HasValue ?
                new ObjectParameter("ID_Factura", iD_Factura) :
                new ObjectParameter("ID_Factura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Modificar_Detalle_Factura", iD_FacturaParameter);
        }
    
        public virtual ObjectResult<SP_Listar_Direcciones_Result> SP_Listar_Direcciones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Listar_Direcciones_Result>("SP_Listar_Direcciones");
        }
    
        public virtual int Sp_Insertar_CierreDevoluciones(Nullable<int> id_factura, string descripcion, Nullable<System.DateTime> fecha_venta, string tipo_pago, Nullable<decimal> total)
        {
            var id_facturaParameter = id_factura.HasValue ?
                new ObjectParameter("Id_factura", id_factura) :
                new ObjectParameter("Id_factura", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var fecha_ventaParameter = fecha_venta.HasValue ?
                new ObjectParameter("Fecha_venta", fecha_venta) :
                new ObjectParameter("Fecha_venta", typeof(System.DateTime));
    
            var tipo_pagoParameter = tipo_pago != null ?
                new ObjectParameter("Tipo_pago", tipo_pago) :
                new ObjectParameter("Tipo_pago", typeof(string));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Insertar_CierreDevoluciones", id_facturaParameter, descripcionParameter, fecha_ventaParameter, tipo_pagoParameter, totalParameter);
        }
    
        public virtual int Sp_Insertar_CierreFacturas(Nullable<int> id_factura, Nullable<System.DateTime> fecha_venta, string tipo_factura, string tipo_pago, Nullable<decimal> total)
        {
            var id_facturaParameter = id_factura.HasValue ?
                new ObjectParameter("Id_factura", id_factura) :
                new ObjectParameter("Id_factura", typeof(int));
    
            var fecha_ventaParameter = fecha_venta.HasValue ?
                new ObjectParameter("Fecha_venta", fecha_venta) :
                new ObjectParameter("Fecha_venta", typeof(System.DateTime));
    
            var tipo_facturaParameter = tipo_factura != null ?
                new ObjectParameter("Tipo_factura", tipo_factura) :
                new ObjectParameter("Tipo_factura", typeof(string));
    
            var tipo_pagoParameter = tipo_pago != null ?
                new ObjectParameter("Tipo_pago", tipo_pago) :
                new ObjectParameter("Tipo_pago", typeof(string));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Insertar_CierreFacturas", id_facturaParameter, fecha_ventaParameter, tipo_facturaParameter, tipo_pagoParameter, totalParameter);
        }
    
        public virtual int Sp_Insertar_CierreMerma(Nullable<int> consecutivo_factura, Nullable<System.DateTime> fecha, Nullable<decimal> total)
        {
            var consecutivo_facturaParameter = consecutivo_factura.HasValue ?
                new ObjectParameter("Consecutivo_factura", consecutivo_factura) :
                new ObjectParameter("Consecutivo_factura", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Insertar_CierreMerma", consecutivo_facturaParameter, fechaParameter, totalParameter);
        }
    
        public virtual int Sp_Insertar_CierreReciclaje(Nullable<System.DateTime> fecha, Nullable<decimal> total)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Insertar_CierreReciclaje", fechaParameter, totalParameter);
        }
    
        public virtual int Sp_Insertar_CuentasPagar(Nullable<int> id_CxP, Nullable<int> id_Cliente, Nullable<System.DateTime> fecha_factura, string tipo_devolucion, Nullable<decimal> monto_devolucion, Nullable<int> id_factura)
        {
            var id_CxPParameter = id_CxP.HasValue ?
                new ObjectParameter("Id_CxP", id_CxP) :
                new ObjectParameter("Id_CxP", typeof(int));
    
            var id_ClienteParameter = id_Cliente.HasValue ?
                new ObjectParameter("Id_Cliente", id_Cliente) :
                new ObjectParameter("Id_Cliente", typeof(int));
    
            var fecha_facturaParameter = fecha_factura.HasValue ?
                new ObjectParameter("Fecha_factura", fecha_factura) :
                new ObjectParameter("Fecha_factura", typeof(System.DateTime));
    
            var tipo_devolucionParameter = tipo_devolucion != null ?
                new ObjectParameter("Tipo_devolucion", tipo_devolucion) :
                new ObjectParameter("Tipo_devolucion", typeof(string));
    
            var monto_devolucionParameter = monto_devolucion.HasValue ?
                new ObjectParameter("Monto_devolucion", monto_devolucion) :
                new ObjectParameter("Monto_devolucion", typeof(decimal));
    
            var id_facturaParameter = id_factura.HasValue ?
                new ObjectParameter("Id_factura", id_factura) :
                new ObjectParameter("Id_factura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Insertar_CuentasPagar", id_CxPParameter, id_ClienteParameter, fecha_facturaParameter, tipo_devolucionParameter, monto_devolucionParameter, id_facturaParameter);
        }
    
        public virtual int Sp_Insertar_ReporteCuentasCobrar(Nullable<System.DateTime> fecha_reporte, Nullable<decimal> total_Ventas_Credito, Nullable<decimal> total_Pagado, Nullable<decimal> total_Intereses_Mora, Nullable<decimal> total_factura, Nullable<int> id_CuentaCobrar)
        {
            var fecha_reporteParameter = fecha_reporte.HasValue ?
                new ObjectParameter("Fecha_reporte", fecha_reporte) :
                new ObjectParameter("Fecha_reporte", typeof(System.DateTime));
    
            var total_Ventas_CreditoParameter = total_Ventas_Credito.HasValue ?
                new ObjectParameter("Total_Ventas_Credito", total_Ventas_Credito) :
                new ObjectParameter("Total_Ventas_Credito", typeof(decimal));
    
            var total_PagadoParameter = total_Pagado.HasValue ?
                new ObjectParameter("Total_Pagado", total_Pagado) :
                new ObjectParameter("Total_Pagado", typeof(decimal));
    
            var total_Intereses_MoraParameter = total_Intereses_Mora.HasValue ?
                new ObjectParameter("Total_Intereses_Mora", total_Intereses_Mora) :
                new ObjectParameter("Total_Intereses_Mora", typeof(decimal));
    
            var total_facturaParameter = total_factura.HasValue ?
                new ObjectParameter("Total_factura", total_factura) :
                new ObjectParameter("Total_factura", typeof(decimal));
    
            var id_CuentaCobrarParameter = id_CuentaCobrar.HasValue ?
                new ObjectParameter("Id_CuentaCobrar", id_CuentaCobrar) :
                new ObjectParameter("Id_CuentaCobrar", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Insertar_ReporteCuentasCobrar", fecha_reporteParameter, total_Ventas_CreditoParameter, total_PagadoParameter, total_Intereses_MoraParameter, total_facturaParameter, id_CuentaCobrarParameter);
        }
    
        public virtual int SP_Insertar_Detalle_Orden_Fabricacion(string desc_Producto, Nullable<int> cantidad, Nullable<int> id_Orden, Nullable<int> id_Producto)
        {
            var desc_ProductoParameter = desc_Producto != null ?
                new ObjectParameter("Desc_Producto", desc_Producto) :
                new ObjectParameter("Desc_Producto", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var id_OrdenParameter = id_Orden.HasValue ?
                new ObjectParameter("Id_Orden", id_Orden) :
                new ObjectParameter("Id_Orden", typeof(int));
    
            var id_ProductoParameter = id_Producto.HasValue ?
                new ObjectParameter("Id_Producto", id_Producto) :
                new ObjectParameter("Id_Producto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Insertar_Detalle_Orden_Fabricacion", desc_ProductoParameter, cantidadParameter, id_OrdenParameter, id_ProductoParameter);
        }
    
        public virtual int SP_Modificar_Detalle_Orden_Fabricacion(Nullable<int> id_Detalle, string desc_Producto, Nullable<int> cantidad, Nullable<int> idOrden, Nullable<int> id_Producto)
        {
            var id_DetalleParameter = id_Detalle.HasValue ?
                new ObjectParameter("Id_Detalle", id_Detalle) :
                new ObjectParameter("Id_Detalle", typeof(int));
    
            var desc_ProductoParameter = desc_Producto != null ?
                new ObjectParameter("Desc_Producto", desc_Producto) :
                new ObjectParameter("Desc_Producto", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var idOrdenParameter = idOrden.HasValue ?
                new ObjectParameter("IdOrden", idOrden) :
                new ObjectParameter("IdOrden", typeof(int));
    
            var id_ProductoParameter = id_Producto.HasValue ?
                new ObjectParameter("Id_Producto", id_Producto) :
                new ObjectParameter("Id_Producto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Modificar_Detalle_Orden_Fabricacion", id_DetalleParameter, desc_ProductoParameter, cantidadParameter, idOrdenParameter, id_ProductoParameter);
        }
    
        public virtual ObjectResult<SP_Mostrar_Detalle_Ordenes_Fabricacion_Result> SP_Mostrar_Detalle_Ordenes_Fabricacion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Mostrar_Detalle_Ordenes_Fabricacion_Result>("SP_Mostrar_Detalle_Ordenes_Fabricacion");
        }
    }
}
